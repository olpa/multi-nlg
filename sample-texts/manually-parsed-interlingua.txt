-- See ~/opt/gf-rgl/src/abstract

let usermanual_X = (DetCN (DetQuant DefArt NumSg) (UseN usermanual_N))

let uses_X = use_V2

let symbols_X = (DetCN (DetQuant IndefArt NumPl) (UseN symbol_N))
let signs_X = (DetCN (DetQuant IndefArt NumPl) (UseN sign_N))

let sysi_X = (ConjNP and_Conj (BaseNP symbols_X signs_X))

let uses_sysi_xX = (ComplSlash (SlashV2a uses_X) sysi_X)

let uman_sysi_X = (PredVP usermanual_X uses_sysi_xX)

-- uman_sysi_X

-- die Ihnen das schnelle Aufﬁnden von Informationen erleichtern. 
-- it simplifies fast find of information for you
-- it helps you

let it_X = (UsePron it_Pron)
let helps_you_xX = (ComplSlash (SlashV2a help_V2) (UsePron youPol_Pron))
let it_helps_you_X = (PredVP it_X helps_you_xX)
-- let it_helps_you_X

-- --------------------------------------------------------

-- Cracks go out from the center of the shaft.

let cracks_X = (DetCN (DetQuant IndefArt NumPl) (UseN crack_N))
let shaftCenter_NP = (AdvNP (DetCN (DetQuant DefArt NumSg) (UseN center_N)) (PrepNP of_Prep (DetCN (DetQuant DefArt NumSg) (UseN shaft_N))))
let go_out_VP = (ComplSlash (VPSlashPrep (UseV go_out_V) from_Prep) shaftCenter_NP)
let crgoout_X = (PredVP cracks_X go_out_VP)
-- crgoout_X

-- --------------------------------------------------------

-- Each engine has a CSD to operate the AC generator at a constant speed of 8000 rpm. Differences in engine rpm and generator load have no effect on this constant speed.

let engine_has_csd_VP = (PredVP (DetCN each_Det (UseN engine_N)) (ComplSlash (SlashV2a have_V2) (DetCN (DetQuant IndefArt NumSg) (UseN csd_N))))
engine_has_csd_VP

-- every European has the right to live in Europe
-- UttS (UseCl (TTAnt TPres ASimul) PPos (PredVP (DetCN every_Det (UseN european_N)) (ComplSlash (SlashV2a have_V2) (DetCN (DetQuant DefArt NumSg)

(AdvCN (SentCN (UseN right_N) (EmbedVP (UseV live_V))) (PrepNP in_Prep (UsePN europe_PN)))

))))

AdvVP: VP -> Adv -> VP
operate the AC generator at a constant speed of 8000 rpm
operate the cat at a speed


-- operate the generator at a speed
(AdvVP (ComplSlash (SlashV2a operate_V2) (DetCN (DetQuant DefArt NumSg) (UseN generator_N)))   (PrepNP at_Prep (DetCN (DetQuant IndefArt NumSg) (UseN speed_N))))

